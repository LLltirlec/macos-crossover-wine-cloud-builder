name: Wine-Crossover-MacOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
    # avoid weird linker errors with Xcode 10 and later
    MACOSX_DEPLOYMENT_TARGET: 10.14
    # directories / files inside the downloaded tar file directory structure
    WINE_CONFIGURE: ${{ github.workspace }}/sources/wine/configure
    # build directories
    BUILDROOT: ${{ github.workspace }}/build
    # target directory for installation
    INSTALLROOT: ${{ github.workspace }}/install
    TOOLS_INSTALLATION: build-tools-cx
    MOLTENVK_DXVK_INSTALLATION: moltenvk-dxvk

jobs:
  moltenVK_DXVK:
    runs-on:  macos-13
    env:
      # crossover source code to be downloaded
      CROSS_OVER_SOURCE_URL: crossover-sources-24.0.5.tar.gz
      CROSS_OVER_LOCAL_FILE: crossover-24.0.5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      ############ Restore MoltenVK / DXVK from cache ##############

      - name: Restore MoltenVK / DXVK from cache
        uses: actions/cache@v4
        id: cache_moltenVK_DXVK
        with:
          path: ${{ env.INSTALLROOT }}/${{ env.MOLTENVK_DXVK_INSTALLATION }}
          key: cache_moltenVK_DXVK_v6

      ############ Build MoltenVK / DXVK (if restore from cache failed) ##############

      - name: Get and Extract Source
        if:  steps.cache_moltenVK_DXVK.outputs.cache-hit != 'true'
        uses: ./.github/actions/get_source
        with:
          crossover-local-file: "${{ env.CROSS_OVER_LOCAL_FILE }}"
          crossover-source-url: "${{ env.CROSS_OVER_SOURCE_URL }}"

      - name: Build / Install MoltenVK and DXVK (if restore from cache failed)
        if:  steps.cache_moltenVK_DXVK.outputs.cache-hit != 'true'
        uses: ./.github/actions/build_moltenvk_dxvk
        with:
          install-prefix: "${{ env.INSTALLROOT }}/${{ env.MOLTENVK_DXVK_INSTALLATION }}"

      ############ Upload MoltenVK / DXVK to be used in subsequent jobs ##############

      - name: Tar MoltenVK / DXVK
        run: |
          set -x
          pushd ${{ env.INSTALLROOT }}
          tar -czf ${{ env.MOLTENVK_DXVK_INSTALLATION }}.tar.gz ${{ env.MOLTENVK_DXVK_INSTALLATION }}
          ls -alt
          popd

      - name: Upload MoltenVK / DXVK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MOLTENVK_DXVK_INSTALLATION }}
          path: ${{ env.INSTALLROOT }}/${{ env.MOLTENVK_DXVK_INSTALLATION }}.tar.gz


  wine-crossover:
    needs: [moltenVK_DXVK]

    #if: "contains(github.event.commits[0].message, '[full]')"
    strategy:
      fail-fast: false
      matrix:
        CROSS_OVER_VERSION: [24.0.5]
    runs-on:  macos-13

    env:
      # crossover source code to be downloaded
      CROSS_OVER_SOURCE_URL: crossover-sources-24.0.5.tar.gz
      CROSS_OVER_LOCAL_FILE: crossover-${{ matrix.CROSS_OVER_VERSION }}
      # artifact names
      WINE_INSTALLATION: wine-cx${{ matrix.CROSS_OVER_VERSION }}
      DXVK_INSTALLATION: dxvk-cx${{ matrix.CROSS_OVER_VERSION }}

    steps:

      ############ Prepare Workspace / Environment ##############

      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest HomeBrew formulas/bottles
        run: |
          brew update

      - name: Install Wine Build Dependencies
        run: |
          brew update
          brew install  flex               \
                        pkgconfig          \
                        gettext

          brew reinstall  bison

          wget https://raw.githubusercontent.com/Homebrew/homebrew-core/d5ec00528f86b8ac31fac2a67b7667cc72aa1b04/Formula/mingw-w64.rb -O mingw-w64.rb
          brew install mingw-w64.rb

          wget https://raw.githubusercontent.com/Gcenx/homebrew-wine/refs/heads/master/Formula/cx-llvm.rb -O cx-llvm.rb
          brew install cx-llvm.rb

          rm /usr/local/bin/2to3 /usr/local/bin/2to3-3.12 /usr/local/bin/idle3 /usr/local/bin/idle3.12 /usr/local/bin/pydoc3 /usr/local/bin/pydoc3.12 /usr/local/bin/python3 /usr/local/bin/python3-config /usr/local/bin/python3.12 /usr/local/bin/python3.12-config

      - name: Install Wine Runtime Dependencies
        run: |
          brew install  freetype           \
                        gphoto2            \
                        gst-plugins-base   \
                        krb5               \
                        molten-vk          \
                        sane-backends      \
                        sdl2

      - name: Add bison, cx-llvm, flex & krb5 to $PATH
        run: |
          set -x
          echo "$(brew --prefix bison)/bin"   >> $GITHUB_PATH
          echo "$(brew --prefix cx-llvm)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix flex)/bin"    >> $GITHUB_PATH
          echo "$(brew --prefix krb5)/bin"    >> $GITHUB_PATH

      - name: Download MoltenVK / DXVK (from previous job)
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MOLTENVK_DXVK_INSTALLATION }}
          path: ${{ env.INSTALLROOT }}

      - name: Unpack MoltenVK / DXVK
        run: |
          set -x
          mkdir -p ${{ env.INSTALLROOT }}/${{ env.WINE_INSTALLATION }}
          pushd ${{ env.INSTALLROOT }}/${{ env.WINE_INSTALLATION }}
          ls -al
          tar --strip-components=1 -xvf ${{ env.INSTALLROOT }}/${{ env.MOLTENVK_DXVK_INSTALLATION }}.tar.gz
          ls -alt
          popd

      ############ Download and Prepare Source Code ##############

      - name: Get and Extract Source
        uses: ./.github/actions/get_source
        with:
          crossover-local-file: "${{ env.CROSS_OVER_LOCAL_FILE }}"
          crossover-source-url: "${{ env.CROSS_OVER_SOURCE_URL }}"

      - name: Remove existing WINE directory
        shell: bash
        run: |
          rm -rf ${{ github.workspace }}/sources/wine
          ls
      
      - name: Clone WINE repository
        shell: bash
        run: |
          git clone https://github.com/LLltirlec/wine_CX-10.0.git ${{ github.workspace }}/sources/wine

      ############ Configure 64bit Version ##############

      - name: Configure wine64
        uses: ./.github/actions/configure_wine
        with:
          winearch: "wine64"
          build-dir: "${{ env.BUILDROOT }}/wine64"
          crossflags: "-g -O2"
          configure-params: "--enable-archs=i386,x86_64 --enable-win64 --disable-tests --without-alsa --without-capi --with-coreaudio --with-cups --without-dbus --without-ffmpeg --without-fontconfig --with-freetype --with-gettext --without-gettextpo --without-gphoto --with-gnutls --without-gssapi --without-gstreamer --with-inotify --without-krb5 --with-mingw --without-netapi --with-opencl --with-opengl --without-oss --with-pcap --with-pcsclite --with-pthread --without-pulse --without-sane --with-sdl --without-udev --with-unwind --without-usb --without-v4l2 --with-vulkan --without-wayland --without-x"

      ############ Build 64bit Version ##############

      - name: Build wine64
        uses: ./.github/actions/make
        with:
          build-dir: "${{ env.BUILDROOT }}/wine64"

      ############ Install wine ##############

      - name: Install wine64
        uses: ./.github/actions/install
        with:
          build-dir: "${{ env.BUILDROOT }}/wine64"
          install-dir: "${{ env.INSTALLROOT }}/${{ env.WINE_INSTALLATION }}"

      ############ Bundle and Upload Deliverable ##############

      - name: Tar Wine
        run: |
          set -x
          pushd ${{ env.INSTALLROOT }}
          tar -czvf ${{ env.WINE_INSTALLATION }}.tar.gz ${{ env.WINE_INSTALLATION }}
          popd

      - name: Upload Wine
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WINE_INSTALLATION }}
          path: ${{ env.INSTALLROOT }}/${{ env.WINE_INSTALLATION }}.tar.gz

  wine-crossover-local:

    strategy:
      fail-fast: false
      matrix:
        CROSS_OVER_VERSION: [24.0.5]
    runs-on:  macos-13
    needs: wine-crossover

    env:
      CROSS_OVER_VERSION: ${{ matrix.CROSS_OVER_VERSION }}
      # this has to be synchronized with the same variable in build_local.sh
      PACKAGE_UPLOAD: ${{ github.workspace }}/upload

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run build_local.sh
        run: ./build_local.sh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-build_local-wine-cx${{ matrix.CROSS_OVER_VERSION }}
          path: ${{ env.PACKAGE_UPLOAD }}
